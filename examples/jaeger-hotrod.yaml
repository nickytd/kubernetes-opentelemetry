apiVersion: v1
kind: Namespace
metadata:
  name: jaeger-hotrod
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-sidecar
  namespace: jaeger-hotrod
spec:
  mode: sidecar
  config: |
    receivers:
      jaeger:
        protocols:
          thrift_compact:

    processors:

    exporters:
      logging:
        loglevel: info
      otlp:
        endpoint: otel-collector-opentelemetry-collector.otel.svc.cluster.local:4317
        tls:
          insecure: true

    service:
      pipelines:
        traces:
          receivers: [jaeger]
          processors: []
          exporters: [otlp]
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: "ca-issuer"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"    
  name: jaeger-hotrod
  namespace: jaeger-hotrod
spec:
  rules:
  - host: jaeger-hotrod.local.dev
    http:
      paths:
      - backend:
          service:
            name: jaeger-hotrod
            port:
              number: 8080
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - jaeger-hotrod.local.dev
    secretName: jaeger-hotrod-tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: jaeger-hotrod
  name: jaeger-hotrod
  namespace: jaeger-hotrod
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: jaeger-hotrod
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: jaeger-hotrod
  name: jaeger-hotrod
  namespace: jaeger-hotrod
  annotations:
    sidecar.opentelemetry.io/inject: "true"
spec:
  containers:
  - image: jaegertracing/example-hotrod:latest
    name: jaeger-hotrod
    env:
      - name: "JAEGER_AGENT_HOST"
        value: "localhost"
      - name: "JAEGER_AGENT_PORT"
        value: "6831"
    ports:
    - containerPort: 8080